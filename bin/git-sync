#!/bin/bash

if [ "$#" -lt "1" ]
then
	printf "Usage: git-sync <branch>\n"
	exit 1
fi

. colors
. script-functions

save-branch

git ls-remote --heads --exit-code origin ${1} &> /dev/null

if [[ "$?" -gt 0 ]]
then
	git push origin ${1}
fi

git fetch origin

behind=$(git rev-list --left-right --count origin/${1}...${1} | awk '{print $1}')
ahead=$(git rev-list --left-right --count origin/${1}...${1} | awk '{print $2}')

git checkout ${1}

if [[ ("${behind}" -gt 0) && ("${ahead}" -eq 0) ]]
then
	git pull origin ${base_branch}
elif [[ ("${ahead}" -gt 0) && ("${behind}" -eq 0) ]]
then
	git push origin ${base_branch}
elif [[ ("${behind}" -gt 0) && ("${ahead}" -gt 0) ]]
then
	printf "${red}Unable to sync '${1}' with 'origin/${1}'${nc}\n"
	exit 1
fi

restore-branch
